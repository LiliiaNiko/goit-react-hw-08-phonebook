{"version":3,"file":"static/js/257.132df28d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Box.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase(contacts))\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 15px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  margin: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Form, Input, Button } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.target;\n\n    const name = evt.target.elements.name.value;\n    const number = evt.target.elements.number.value;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label>Number</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  display: flex;\n`;\n\nexport const ListItem = styled.li`\n  margin-right: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Button } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleRemove = () => dispatch(deleteContact(id));\n\n  return (\n    <List>\n      <ListItem key={id}>\n        {name}: {number}\n      </ListItem>\n      <Button type=\"button\" onClick={handleRemove}>\n        Delete\n      </Button>\n    </List>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string,\n};\n","import React from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {contacts.map(({ name, number, id }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { FilterWrap } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => dispatch(changeFilter(evt.currentTarget.value));\n  return (\n    <FilterWrap>\n      <label>Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box p={4}>\n      <ContactsForm />\n\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n\n      <ContactsList />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","Input","Button","ContactsForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","target","elements","value","number","find","alert","addContact","reset","type","pattern","title","required","List","ListItem","id","onClick","deleteContact","map","FilterWrap","onChange","changeFilter","currentTarget","Box","color","space","layout","flexbox","grid","background","border","position","Contacts","useEffect","fetchContacts","p"],"sourceRoot":""}